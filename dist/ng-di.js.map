{"version":3,"file":"ng-di.js","sources":["../lib/utils.js","../lib/minErr.js","../lib/module.js","../lib/hashmap.js","../lib/injector.js","../lib/index.js"],"sourcesContent":["var uid = 0;\r\n\r\n// Support: IE 9-11 only\r\n/**\r\n * documentMode is an IE-only property\r\n * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx\r\n */\r\nvar msie = typeof window !== 'undefined' && window.document.documentMode;\r\nvar MinErr = require('./minErr');\r\n\r\n////////////////////////////////////\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.forEach\r\n * @function\r\n *\r\n * @description\r\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\r\n * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`\r\n * is the value of an object property or an array element and `key` is the object property key or\r\n * array element index. Specifying a `context` for the function is optional.\r\n *\r\n * Note: this function was previously known as `angular.foreach`.\r\n *\r\n <pre>\r\n var values = {name: 'misko', gender: 'male'};\r\n var log = [];\r\n angular.forEach(values, function(value, key){\r\n     this.push(key + ': ' + value);\r\n   }, log);\r\n expect(log).toEqual(['name: misko', 'gender:male']);\r\n </pre>\r\n *\r\n * @param {Object|Array} obj Object to iterate over.\r\n * @param {Function} iterator Iterator function.\r\n * @param {Object=} context Object to become context (`this`) for the iterator function.\r\n * @returns {Object|Array} Reference to `obj`.\r\n */\r\n\r\n\r\n/**\r\n * @private\r\n * @param {*} obj\r\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments, ...)\r\n */\r\nfunction isArrayLike(obj) {\r\n  if (!obj || (typeof obj.length !== 'number')) return false;\r\n\r\n  // We have on object which has length property. Should we treat it as array?\r\n  if (typeof obj.hasOwnProperty != 'function' &&\r\n    typeof obj.constructor != 'function') {\r\n    // This is here for IE8: it is a bogus object treat it as array;\r\n    return true;\r\n  } else {\r\n    return Object.prototype.toString.call(obj) !== '[object Object]' ||   // some browser native object\r\n      typeof obj.callee === 'function';              // arguments (on IE8 looks like regular obj)\r\n  }\r\n}\r\n\r\n\r\nfunction forEach(obj, iterator, context) {\r\n  var key;\r\n  if (obj) {\r\n    if (isFunction(obj)) {\r\n      for (key in obj) {\r\n        if (key != 'prototype' && key != 'length' && key != 'name' && obj.hasOwnProperty(key)) {\r\n          iterator.call(context, obj[key], key);\r\n        }\r\n      }\r\n    } else if (obj.forEach && obj.forEach !== forEach) {\r\n      obj.forEach(iterator, context);\r\n    } else if (isArrayLike(obj)) {\r\n      for (key = 0; key < obj.length; key++){\r\n        iterator.call(context, obj[key], key);\r\n      }\r\n    } else {\r\n      for (key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          iterator.call(context, obj[key], key);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.extend\r\n * @function\r\n *\r\n * @description\r\n * Extends the destination object `dst` by copying all of the properties from the `src` object(s)\r\n * to `dst`. You can specify multiple `src` objects.\r\n *\r\n * @param {Object} dst Destination object.\r\n * @param {...Object} src Source object(s).\r\n */\r\nfunction extend(dst) {\r\n  forEach(arguments, function(obj){\r\n    if (obj !== dst) {\r\n      forEach(obj, function(value, key){\r\n        dst[key] = value;\r\n      });\r\n    }\r\n  });\r\n  return dst;\r\n}\r\n\r\n\r\n/**\r\n * when using forEach the params are value, key, but it is often useful to have key, value.\r\n * @param {function(string, *)} iteratorFn\r\n * @returns {function(*, string)}\r\n */\r\nfunction reverseParams(iteratorFn) {\r\n  return function(value, key) {\r\n    iteratorFn(key, value)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * A consistent way of creating unique IDs in angular.\r\n *\r\n * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\r\n * we hit number precision issues in JavaScript.\r\n *\r\n * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M\r\n *\r\n * @returns {number} an unique alpha-numeric string\r\n */\r\nfunction nextUid() {\r\n  return ++uid;\r\n}\r\n\r\nfunction valueFn(value) {\r\n  return function () {\r\n    return value;\r\n  };\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.isObject\r\n * @function\r\n *\r\n * @description\r\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\r\n * considered to be objects.\r\n *\r\n * @param {*} value Reference to check.\r\n * @returns {boolean} True if `value` is an `Object` but not `null`.\r\n */\r\nfunction isObject(value) {\r\n  return value != null && typeof value == 'object';\r\n};\r\n\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.isString\r\n * @function\r\n *\r\n * @description\r\n * Determines if a reference is a `String`.\r\n *\r\n * @param {*} value Reference to check.\r\n * @returns {boolean} True if `value` is a `String`.\r\n */\r\nfunction isString(value) {\r\n  return typeof value == 'string';\r\n};\r\n\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.isNumber\r\n * @module ng\r\n * @kind function\r\n *\r\n * @description\r\n * Determines if a reference is a `Number`.\r\n *\r\n * This includes the \"special\" numbers `NaN`, `+Infinity` and `-Infinity`.\r\n *\r\n * If you wish to exclude these then you can use the native\r\n * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)\r\n * method.\r\n *\r\n * @param {*} value Reference to check.\r\n * @returns {boolean} True if `value` is a `Number`.\r\n */\r\nfunction isNumber(value) {return typeof value === 'number';}\r\n\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.isFunction\r\n * @function\r\n *\r\n * @description\r\n * Determines if a reference is a `Function`.\r\n *\r\n * @param {*} value Reference to check.\r\n * @returns {boolean} True if `value` is a `Function`.\r\n */\r\nfunction isFunction(value) {\r\n  return typeof value == 'function';\r\n};\r\n\r\n\r\n/**\r\n * throw error if the argument is falsy.\r\n */\r\nfunction assertArg(arg, name, reason) {\r\n  if (!arg) {\r\n    var ngMinErr = MinErr.minErr('di');\r\n    throw ngMinErr('areq', 'Argument \\'{0}\\' is {1}', (name || '?'), (reason || 'required'));\r\n  }\r\n  return arg;\r\n}\r\n\r\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\r\n  if (acceptArrayAnnotation && Array.isArray(arg)) {\r\n      arg = arg[arg.length - 1];\r\n  }\r\n\r\n  assertArg(isFunction(arg), name, 'not a function, got ' +\r\n      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));\r\n  return arg;\r\n}\r\n\r\n\r\nfunction noop() {};\r\n\r\n\r\nvar isNumberNaN = Number.isNaN || function isNumberNaN(num) {\r\n  // eslint-disable-next-line no-self-compare\r\n  return num !== num;\r\n};\r\n\r\n\r\nfunction isBoolean(value) {\r\n  return typeof value === 'boolean';\r\n}\r\n\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.isUndefined\r\n * @module ng\r\n * @kind function\r\n *\r\n * @description\r\n * Determines if a reference is undefined.\r\n *\r\n * @param {*} value Reference to check.\r\n * @returns {boolean} True if `value` is undefined.\r\n */\r\nfunction isUndefined(value) {return typeof value === 'undefined';}\r\n\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.isDefined\r\n * @module ng\r\n * @kind function\r\n *\r\n * @description\r\n * Determines if a reference is defined.\r\n *\r\n * @param {*} value Reference to check.\r\n * @returns {boolean} True if `value` is defined.\r\n */\r\nfunction isDefined(value) {return typeof value !== 'undefined';}\r\n\r\n\r\n/**\r\n * Creates a new object without a prototype. This object is useful for lookup without having to\r\n * guard against prototypically inherited properties via hasOwnProperty.\r\n *\r\n * Related micro-benchmarks:\r\n * - http://jsperf.com/object-create2\r\n * - http://jsperf.com/proto-map-lookup/2\r\n * - http://jsperf.com/for-in-vs-object-keys2\r\n *\r\n * @returns {Object}\r\n */\r\nfunction createMap() {\r\n  return Object.create(null);\r\n}\r\n\r\n\r\nvar assertNotHasOwnProperty = function(name, context) {\r\n  if (name === 'hasOwnProperty') {\r\n    var ngMinErr = MinErr.minErr('di');\r\n    throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\r\n  }\r\n};\r\n\r\nvar slice             = [].slice;\r\nfunction sliceArgs(args, startIndex) {\r\n  return slice.call(args, startIndex || 0);\r\n}\r\n\r\n\r\nconst isArray = Array.isArray;\r\n\r\nexport {\r\n  forEach,\r\n  reverseParams,\r\n  extend,\r\n  nextUid,\r\n  assertArg,\r\n  assertArgFn,\r\n  valueFn,\r\n  isString,\r\n  isNumber,\r\n  isFunction,\r\n  isObject,\r\n  noop,\r\n  isNumberNaN,\r\n  isBoolean,\r\n  isArray,\r\n  isUndefined,\r\n  isDefined,\r\n  createMap,\r\n  msie,\r\n  assertNotHasOwnProperty,\r\n  sliceArgs,\r\n};\r\n \r\n","import {\r\n  isObject,\r\n  isNumber,\r\n  sliceArgs,\r\n  isUndefined,\r\n  isDefined\r\n} from \"./utils\";\r\n\r\n\r\n/**\r\n * Checks if `obj` is a window object.\r\n *\r\n * @private\r\n * @param {*} obj Object to check\r\n * @returns {boolean} True if `obj` is a window obj.\r\n */\r\nfunction isWindow(obj) {\r\n  return obj && obj.window === obj;\r\n}\r\n\r\n\r\nfunction isScope(obj) {\r\n  return obj && obj.$evalAsync && obj.$watch;\r\n}\r\n\r\n\r\nfunction toJsonReplacer(key, value) {\r\n  var val = value;\r\n\r\n  if (typeof key === 'string' && key.charAt(0) === '$' && key.charAt(1) === '$') {\r\n    val = undefined;\r\n  } else if (isWindow(value)) {\r\n    val = '$WINDOW';\r\n  } else if (value && typeof window !== 'undefined' && window.document === value) {\r\n    val = '$DOCUMENT';\r\n  } else if (isScope(value)) {\r\n    val = '$SCOPE';\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n\r\nfunction serializeObject(obj, maxDepth) {\r\n  var seen = [];\r\n\r\n  // // There is no direct way to stringify object until reaching a specific depth\r\n  // // and a very deep object can cause a performance issue, so we copy the object\r\n  // // based on this specific depth and then stringify it.\r\n  // if (isValidObjectMaxDepth(maxDepth)) {\r\n  //   // This file is also included in `angular-loader`, so `copy()` might not always be available in\r\n  //   // the closure. Therefore, it is lazily retrieved as `angular.copy()` when needed.\r\n  //   obj = angular.copy(obj, null, maxDepth);\r\n  // }\r\n  return JSON.stringify(obj, function(key, val) {\r\n    val = toJsonReplacer(key, val);\r\n    if (isObject(val)) {\r\n\r\n      if (seen.indexOf(val) >= 0) return '...';\r\n\r\n      seen.push(val);\r\n    }\r\n    return val;\r\n  });\r\n}\r\n\r\nfunction toDebugString(obj, maxDepth) {\r\n  if (typeof obj === 'function') {\r\n    return obj.toString().replace(/ \\{[\\s\\S]*$/, '');\r\n  } else if (isUndefined(obj)) {\r\n    return 'undefined';\r\n  } else if (typeof obj !== 'string') {\r\n    return serializeObject(obj, maxDepth);\r\n  }\r\n  return obj;\r\n}\r\n\r\n\r\n\r\n/* exported\r\n  minErrConfig,\r\n  errorHandlingConfig,\r\n  isValidObjectMaxDepth\r\n*/\r\n\r\nvar minErrConfig = {\r\n  objectMaxDepth: 5,\r\n  urlErrorParamsEnabled: false\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.errorHandlingConfig\r\n * @module ng\r\n * @kind function\r\n *\r\n * @description\r\n * Configure several aspects of error handling in AngularJS if used as a setter or return the\r\n * current configuration if used as a getter. The following options are supported:\r\n *\r\n * - **objectMaxDepth**: The maximum depth to which objects are traversed when stringified for error messages.\r\n *\r\n * Omitted or undefined options will leave the corresponding configuration values unchanged.\r\n *\r\n * @param {Object=} config - The configuration object. May only contain the options that need to be\r\n *     updated. Supported keys:\r\n *\r\n * * `objectMaxDepth`  **{Number}** - The max depth for stringifying objects. Setting to a\r\n *   non-positive or non-numeric value, removes the max depth limit.\r\n *   Default: 5\r\n *\r\n * * `urlErrorParamsEnabled`  **{Boolean}** - Specifies whether the generated error url will\r\n *   contain the parameters of the thrown error. Disabling the parameters can be useful if the\r\n *   generated error url is very long.\r\n *\r\n *   Default: true. When used without argument, it returns the current value.\r\n */\r\nfunction errorHandlingConfig(config) {\r\n  if (isObject(config)) {\r\n    if (isDefined(config.objectMaxDepth)) {\r\n      minErrConfig.objectMaxDepth = isValidObjectMaxDepth(config.objectMaxDepth) ? config.objectMaxDepth : NaN;\r\n    }\r\n    if (isDefined(config.urlErrorParamsEnabled) && isBoolean(config.urlErrorParamsEnabled)) {\r\n      minErrConfig.urlErrorParamsEnabled = config.urlErrorParamsEnabled;\r\n    }\r\n  } else {\r\n    return minErrConfig;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {Number} maxDepth\r\n * @return {boolean}\r\n */\r\nfunction isValidObjectMaxDepth(maxDepth) {\r\n  return isNumber(maxDepth) && maxDepth > 0;\r\n}\r\n\r\n\r\n/**\r\n * @description\r\n *\r\n * This object provides a utility for producing rich Error messages within\r\n * AngularJS. It can be called as follows:\r\n *\r\n * var exampleMinErr = minErr('example');\r\n * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);\r\n *\r\n * The above creates an instance of minErr in the example namespace. The\r\n * resulting error will have a namespaced error code of example.one.  The\r\n * resulting error will replace {0} with the value of foo, and {1} with the\r\n * value of bar. The object is not restricted in the number of arguments it can\r\n * take.\r\n *\r\n * If fewer arguments are specified than necessary for interpolation, the extra\r\n * interpolation markers will be preserved in the final string.\r\n *\r\n * Since data will be parsed statically during a build step, some restrictions\r\n * are applied with respect to how minErr instances are created and called.\r\n * Instances should have names of the form namespaceMinErr for a minErr created\r\n * using minErr('namespace'). Error codes, namespaces and template strings\r\n * should all be static strings, not variables or general expressions.\r\n *\r\n * @param {string} module The namespace to use for the new minErr instance.\r\n * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning\r\n *   error from returned function, for cases when a particular type of error is useful.\r\n * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance\r\n */\r\n\r\nfunction minErr(module, ErrorConstructor) {\r\n  ErrorConstructor = ErrorConstructor || Error;\r\n\r\n  return function() {\r\n    var code = arguments[0],\r\n      template = arguments[1],\r\n      message = '[' + (module ? module + ':' : '') + code + '] ',\r\n      templateArgs = sliceArgs(arguments, 2).map(function(arg) {\r\n        return toDebugString(arg, minErrConfig.objectMaxDepth);\r\n      }),\r\n      paramPrefix, i;\r\n\r\n    // A minErr message has two parts: the message itself and the url that contains the\r\n    // encoded message.\r\n    // The message's parameters can contain other error messages which also include error urls.\r\n    // To prevent the messages from getting too long, we strip the error urls from the parameters.\r\n\r\n    message += template.replace(/\\{\\d+\\}/g, function(match) {\r\n      var index = +match.slice(1, -1);\r\n\r\n      if (index < templateArgs.length) {\r\n        return templateArgs[index];\r\n      }\r\n\r\n      return match;\r\n    });\r\n\r\n    message += '\\n' + (module ? module + '/' : '') + code;\r\n\r\n    return new ErrorConstructor(message);\r\n  };\r\n}\r\n\r\nexport default minErr;\r\nexport {\r\n  minErr\r\n};\r\n","import { minErr } from \"./minErr\";\r\nimport {\r\n  isFunction,\r\n  isDefined,\r\n  isObject,\r\n} from \"./utils\";\r\n\r\n/*\r\nangular.js 1.6.10 `src/loader.js`\r\n*/\r\nexport function setupModuleLoader(where) {\r\n\r\n  var $injectorMinErr = minErr('$injector');\r\n  var ngMinErr = minErr('di');\r\n\r\n  function ensure(obj, name, factory) {\r\n    return obj[name] || (obj[name] = factory());\r\n  }\r\n\r\n  return ensure(where, 'module', function() {\r\n    /** @type {Object.<string, angular.Module>} */\r\n    var modules = {};\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name angular.module\r\n     * @module ng\r\n     * @description\r\n     *\r\n     * The `angular.module` is a global place for creating, registering and retrieving AngularJS\r\n     * modules.\r\n     * All modules (AngularJS core or 3rd party) that should be available to an application must be\r\n     * registered using this mechanism.\r\n     *\r\n     * Passing one argument retrieves an existing {@link angular.Module},\r\n     * whereas passing more than one argument creates a new {@link angular.Module}\r\n     *\r\n     *\r\n     * # Module\r\n     *\r\n     * A module is a collection of services, directives, controllers, filters, and configuration information.\r\n     * `angular.module` is used to configure the {@link auto.$injector $injector}.\r\n     *\r\n     * ```js\r\n     * // Create a new module\r\n     * var myModule = angular.module('myModule', []);\r\n     *\r\n     * // register a new service\r\n     * myModule.value('appName', 'MyCoolApp');\r\n     *\r\n     * // configure existing services inside initialization blocks.\r\n     * myModule.config(['$locationProvider', function($locationProvider) {\r\n     *   // Configure existing providers\r\n     *   $locationProvider.hashPrefix('!');\r\n     * }]);\r\n     * ```\r\n     *\r\n     * Then you can create an injector and load your modules like this:\r\n     *\r\n     * ```js\r\n     * var injector = angular.injector(['ng', 'myModule'])\r\n     * ```\r\n     *\r\n     * However it's more likely that you'll just use\r\n     * {@link ng.directive:ngApp ngApp} or\r\n     * {@link angular.bootstrap} to simplify this process for you.\r\n     *\r\n     * @param {!string} name The name of the module to create or retrieve.\r\n     * @param {!Array.<string>=} requires If specified then new module is being created. If\r\n     *        unspecified then the module is being retrieved for further configuration.\r\n     * @param {Function=} configFn Optional configuration function for the module. Same as\r\n     *        {@link angular.Module#config Module#config()}.\r\n     * @returns {angular.Module} new module with the {@link angular.Module} api.\r\n     */\r\n    return function module(name, requires, configFn) {\r\n      \r\n      var info = {};\r\n\r\n      var assertNotHasOwnProperty = function(name, context) {\r\n        if (name === 'hasOwnProperty') {\r\n          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\r\n        }\r\n      };\r\n\r\n      assertNotHasOwnProperty(name, 'module');\r\n      if (requires && modules.hasOwnProperty(name)) {\r\n        modules[name] = null;\r\n      }\r\n      return ensure(modules, name, function() {\r\n        if (!requires) {\r\n          throw $injectorMinErr('nomod', 'Module \\'{0}\\' is not available! You either misspelled ' +\r\n           'the module name or forgot to load it. If registering a module ensure that you ' +\r\n           'specify the dependencies as the second argument.', name);\r\n        }\r\n\r\n        /** @type {!Array.<Array.<*>>} */\r\n        var invokeQueue = [];\r\n\r\n        /** @type {!Array.<Function>} */\r\n        var configBlocks = [];\r\n\r\n        /** @type {!Array.<Function>} */\r\n        var runBlocks = [];\r\n\r\n      var config = invokeLater('$injector', 'invoke', 'push', configBlocks);\r\n\r\n        /** @type {angular.Module} */\r\n        var moduleInstance = {\r\n          // Private state\r\n          _invokeQueue: invokeQueue,\r\n          _configBlocks: configBlocks,\r\n          _runBlocks: runBlocks,\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#info\r\n           * @module ng\r\n           *\r\n           * @param {Object=} info Information about the module\r\n           * @returns {Object|Module} The current info object for this module if called as a getter,\r\n           *                          or `this` if called as a setter.\r\n           *\r\n           * @description\r\n           * Read and write custom information about this module.\r\n           * For example you could put the version of the module in here.\r\n           *\r\n           * ```js\r\n           * angular.module('myModule', []).info({ version: '1.0.0' });\r\n           * ```\r\n           *\r\n           * The version could then be read back out by accessing the module elsewhere:\r\n           *\r\n           * ```\r\n           * var version = angular.module('myModule').info().version;\r\n           * ```\r\n           *\r\n           * You can also retrieve this information during runtime via the\r\n           * {@link $injector#modules `$injector.modules`} property:\r\n           *\r\n           * ```js\r\n           * var version = $injector.modules['myModule'].info().version;\r\n           * ```\r\n           */\r\n          info: function(value) {\r\n            if (isDefined(value)) {\r\n              if (!isObject(value)) throw ngMinErr('aobj', 'Argument \\'{0}\\' must be an object', 'value');\r\n              info = value;\r\n              return this;\r\n            }\r\n            return info;\r\n          },\r\n\r\n          /**\r\n           * @ngdoc property\r\n           * @name angular.Module#requires\r\n           * @propertyOf angular.Module\r\n           * @returns {Array.<string>} List of module names which must be loaded before this module.\r\n           * @description\r\n           * Holds the list of modules which the injector will load before the current module is loaded.\r\n           */\r\n          requires: requires,\r\n\r\n          /**\r\n           * @ngdoc property\r\n           * @name angular.Module#name\r\n           * @propertyOf angular.Module\r\n           * @returns {string} Name of the module.\r\n           * @description\r\n           */\r\n          name: name,\r\n\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#provider\r\n           * @module ng\r\n           * @param {string} name service name\r\n           * @param {Function} providerType Construction function for creating new instance of the\r\n           *                                service.\r\n           * @description\r\n           * See {@link auto.$provide#provider $provide.provider()}.\r\n           */\r\n          provider: invokeLaterAndSetModuleName('$provide', 'provider'),\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#factory\r\n           * @module ng\r\n           * @param {string} name service name\r\n           * @param {Function} providerFunction Function for creating new instance of the service.\r\n           * @description\r\n           * See {@link auto.$provide#factory $provide.factory()}.\r\n           */\r\n          factory: invokeLaterAndSetModuleName('$provide', 'factory'),\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#service\r\n           * @module ng\r\n           * @param {string} name service name\r\n           * @param {Function} constructor A constructor function that will be instantiated.\r\n           * @description\r\n           * See {@link auto.$provide#service $provide.service()}.\r\n           */\r\n          service: invokeLaterAndSetModuleName('$provide', 'service'),\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#value\r\n           * @methodOf angular.Module\r\n           * @param {string} name service name\r\n           * @param {*} object Service instance object.\r\n           * @description\r\n           * See {@link AUTO.$provide#value $provide.value()}.\r\n           */\r\n          value: invokeLater('$provide', 'value'),\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#constant\r\n           * @methodOf angular.Module\r\n           * @param {string} name constant name\r\n           * @param {*} object Constant value.\r\n           * @description\r\n           * Because the constant are fixed, they get applied before other provide methods.\r\n           * See {@link AUTO.$provide#constant $provide.constant()}.\r\n           */\r\n          constant: invokeLater('$provide', 'constant', 'unshift'),\r\n\r\n           /**\r\n           * @ngdoc method\r\n           * @name angular.Module#decorator\r\n           * @module ng\r\n           * @param {string} name The name of the service to decorate.\r\n           * @param {Function} decorFn This function will be invoked when the service needs to be\r\n           *                           instantiated and should return the decorated service instance.\r\n           * @description\r\n           * See {@link auto.$provide#decorator $provide.decorator()}.\r\n           */\r\n          decorator: invokeLaterAndSetModuleName('$provide', 'decorator', configBlocks),\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#config\r\n           * @methodOf angular.Module\r\n           * @param {Function} configFn Execute this function on module load. Useful for service\r\n           *    configuration.\r\n           * @description\r\n           * Use this method to register work which needs to be performed on module loading.\r\n           */\r\n          config: config,\r\n\r\n          /**\r\n           * @ngdoc method\r\n           * @name angular.Module#run\r\n           * @methodOf angular.Module\r\n           * @param {Function} initializationFn Execute this function after injector creation.\r\n           *    Useful for application initialization.\r\n           * @description\r\n           * Use this method to register work which should be performed when the injector is done\r\n           * loading all modules.\r\n           */\r\n          run: function(block) {\r\n            runBlocks.push(block);\r\n            return this;\r\n          }\r\n        };\r\n\r\n        if (configFn) {\r\n          config(configFn);\r\n        }\r\n\r\n        return  moduleInstance;\r\n\r\n        /**\r\n         * @param {string} provider\r\n         * @param {string} method\r\n         * @param {String=} insertMethod\r\n         * @returns {angular.Module}\r\n         */\r\n        function invokeLater(provider, method, insertMethod, queue) {\r\n          if (!queue) queue = invokeQueue;\r\n          return function() {\r\n            queue[insertMethod || 'push']([provider, method, arguments]);\r\n            return moduleInstance;\r\n          };\r\n        }\r\n\r\n        /**\r\n         * @param {string} provider\r\n         * @param {string} method\r\n         * @returns {angular.Module}\r\n         */\r\n        function invokeLaterAndSetModuleName(provider, method, queue) {\r\n          if (!queue) queue = invokeQueue;\r\n          return function(recipeName, factoryFunction) {\r\n            if (factoryFunction && isFunction(factoryFunction)) factoryFunction.$$moduleName = name;\r\n            queue.push([provider, method, arguments]);\r\n            return moduleInstance;\r\n          };\r\n        }\r\n      });\r\n    };\r\n  });\r\n\r\n}\r\n","/*\r\nangular.js 1.6.10\r\n*/\r\nimport {\r\n  nextUid,\r\n  isNumberNaN\r\n} from \"./utils\";\r\n\r\n\r\n/**\r\n * Computes a hash of an 'obj'.\r\n * Hash of a:\r\n *  string is string\r\n *  number is number as string\r\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\r\n *         that is also assigned to the $$hashKey property of the object.\r\n *\r\n * @param obj\r\n * @returns {string} hash string such that the same input will have the same hash string.\r\n *         The resulting string key is in 'type:hashKey' format.\r\n */\r\nfunction hashKey(obj, nextUidFn) {\r\n  var key = obj && obj.$$hashKey;\r\n\r\n  if (key) {\r\n    if (typeof key === 'function') {\r\n      key = obj.$$hashKey();\r\n    }\r\n    return key;\r\n  }\r\n\r\n  var objType = typeof obj;\r\n  if (objType === 'function' || (objType === 'object' && obj !== null)) {\r\n    key = obj.$$hashKey = objType + ':' + (nextUidFn || nextUid)();\r\n  } else {\r\n    key = objType + ':' + obj;\r\n  }\r\n\r\n  return key;\r\n}\r\n\r\n// A minimal ES2015 Map implementation.\r\n// Should be bug/feature equivalent to the native implementations of supported browsers\r\n// (for the features required in Angular).\r\n// See https://kangax.github.io/compat-table/es6/#test-Map\r\nvar nanKey = Object.create(null);\r\nfunction NgMapShim() {\r\n  this._keys = [];\r\n  this._values = [];\r\n  this._lastKey = NaN;\r\n  this._lastIndex = -1;\r\n}\r\nNgMapShim.prototype = {\r\n  _idx: function(key) {\r\n    if (key !== this._lastKey) {\r\n      this._lastKey = key;\r\n      this._lastIndex = this._keys.indexOf(key);\r\n    }\r\n    return this._lastIndex;\r\n  },\r\n  _transformKey: function(key) {\r\n    return isNumberNaN(key) ? nanKey : key;\r\n  },\r\n  get: function(key) {\r\n    key = this._transformKey(key);\r\n    var idx = this._idx(key);\r\n    if (idx !== -1) {\r\n      return this._values[idx];\r\n    }\r\n  },\r\n  has: function(key) {\r\n    key = this._transformKey(key);\r\n    var idx = this._idx(key);\r\n    return idx !== -1;\r\n  },\r\n  set: function(key, value) {\r\n    key = this._transformKey(key);\r\n    var idx = this._idx(key);\r\n    if (idx === -1) {\r\n      idx = this._lastIndex = this._keys.length;\r\n    }\r\n    this._keys[idx] = key;\r\n    this._values[idx] = value;\r\n\r\n    // Support: IE11\r\n    // Do not `return this` to simulate the partial IE11 implementation\r\n  },\r\n  delete: function(key) {\r\n    key = this._transformKey(key);\r\n    var idx = this._idx(key);\r\n    if (idx === -1) {\r\n      return false;\r\n    }\r\n    this._keys.splice(idx, 1);\r\n    this._values.splice(idx, 1);\r\n    this._lastKey = NaN;\r\n    this._lastIndex = -1;\r\n    return true;\r\n  }\r\n};\r\n\r\n// For now, always use `NgMapShim`, even if `window.Map` is available. Some native implementations\r\n// are still buggy (often in subtle ways) and can cause hard-to-debug failures. When native `Map`\r\n// implementations get more stable, we can reconsider switching to `window.Map` (when available).\r\nexport default NgMapShim;\r\nexport {\r\n  NgMapShim as NgMap,\r\n  hashKey,\r\n}\r\n","import * as di from \"./index\";\r\nimport minErr from \"./minErr\";\r\nimport NgMap from \"./hashmap\";\r\nimport {\r\n  isString,\r\n  valueFn,\r\n  createMap,\r\n  forEach,\r\n  isObject,\r\n  isFunction,\r\n  assertNotHasOwnProperty,\r\n  assertArg,\r\n  assertArgFn,\r\n  reverseParams,\r\n  isBoolean,\r\n  isUndefined,\r\n  msie\r\n} from \"./utils\";\r\nimport * as utils from \"./utils\";\r\n\r\n\r\n/**\r\n * @ngdoc function\r\n * @name angular.injector\r\n * @function\r\n *\r\n * @description\r\n * Creates an injector function that can be used for retrieving services as well as for\r\n * dependency injection (see {@link guide/di dependency injection}).\r\n *\r\n\r\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\r\n *        {@link angular.module}. The `ng` module must be explicitly added.\r\n * @returns {function()} Injector function. See {@link AUTO.$injector $injector}.\r\n *\r\n * @example\r\n * Typical usage\r\n * <pre>\r\n *   // create an injector\r\n *   var $injector = angular.injector(['ng']);\r\n *\r\n *   // use the injector to kick off your application\r\n *   // use the type inference to auto inject arguments, or use implicit injection\r\n *   $injector.invoke(function($rootScope, $compile, $document){\r\n *     $compile($document)($rootScope);\r\n *     $rootScope.$digest();\r\n *   });\r\n * </pre>\r\n */\r\n\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name AUTO\r\n * @description\r\n *\r\n * Implicit module which gets automatically added to each {@link AUTO.$injector $injector}.\r\n */\r\n\r\nvar ARROW_ARG = /^([^(]+?)=>/;\r\nvar FN_ARGS = /^[^(]*\\(\\s*([^)]*)\\)/m;\r\nvar FN_ARG_SPLIT = /,/;\r\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\r\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\nvar $injectorMinErr = minErr('$injector');\r\n\r\nfunction stringifyFn(fn) {\r\n  return Function.prototype.toString.call(fn);\r\n}\r\n\r\nfunction extractArgs(fn) {\r\n  var fnText = stringifyFn(fn).replace(STRIP_COMMENTS, ''),\r\n      args = fnText.match(ARROW_ARG) || fnText.match(FN_ARGS);\r\n  return args;\r\n}\r\n\r\nfunction anonFn(fn) {\r\n  // For anonymous functions, showing at the very least the function signature can help in\r\n  // debugging.\r\n  var args = extractArgs(fn);\r\n  if (args) {\r\n    return 'function(' + (args[1] || '').replace(/[\\s\\r\\n]+/, ' ') + ')';\r\n  }\r\n  return 'fn';\r\n}\r\n\r\nfunction annotate(fn, strictDi, name) {\r\n  var $inject,\r\n      argDecl,\r\n      last;\r\n\r\n  if (typeof fn === 'function') {\r\n    if (!($inject = fn.$inject)) {\r\n      $inject = [];\r\n      if (fn.length) {\r\n        if (strictDi) {\r\n          if (!isString(name) || !name) {\r\n            name = fn.name || anonFn(fn);\r\n          }\r\n          throw $injectorMinErr('strictdi',\r\n            '{0} is not using explicit annotation and cannot be invoked in strict mode', name);\r\n        }\r\n        argDecl = extractArgs(fn);\r\n        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {\r\n          arg.replace(FN_ARG, function(all, underscore, name) {\r\n            $inject.push(name);\r\n          });\r\n        });\r\n      }\r\n      fn.$inject = $inject;\r\n    }\r\n  } else if (Array.isArray(fn)) {\r\n    last = fn.length - 1;\r\n    assertArgFn(fn[last], 'fn');\r\n    $inject = fn.slice(0, last);\r\n  } else {\r\n    assertArgFn(fn, 'fn', true);\r\n  }\r\n  return $inject;\r\n}\r\n\r\n///////////////////////////////////////\r\n\r\n/**\r\n * @ngdoc object\r\n * @name AUTO.$injector\r\n * @function\r\n *\r\n * @description\r\n *\r\n * `$injector` is used to retrieve object instances as defined by\r\n * {@link AUTO.$provide provider}, instantiate types, invoke methods,\r\n * and load modules.\r\n *\r\n * The following always holds true:\r\n *\r\n * <pre>\r\n *   var $injector = angular.injector();\r\n *   expect($injector.get('$injector')).toBe($injector);\r\n *   expect($injector.invoke(function($injector){\r\n *     return $injector;\r\n *   }).toBe($injector);\r\n * </pre>\r\n *\r\n * # Injection Function Annotation\r\n *\r\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\r\n * following ways are all valid way of annotating function with injection arguments and are equivalent.\r\n *\r\n * <pre>\r\n *   // inferred (only works if code not minified/obfuscated)\r\n *   $injector.invoke(function(serviceA){});\r\n *\r\n *   // annotated\r\n *   function explicit(serviceA) {};\r\n *   explicit.$inject = ['serviceA'];\r\n *   $injector.invoke(explicit);\r\n *\r\n *   // inline\r\n *   $injector.invoke(['serviceA', function(serviceA){}]);\r\n * </pre>\r\n *\r\n * ## Inference\r\n *\r\n * In JavaScript calling `toString()` on a function returns the function definition. The definition can then be\r\n * parsed and the function arguments can be extracted. *NOTE:* This does not work with minification, and obfuscation\r\n * tools since these tools change the argument names.\r\n *\r\n * ## `$inject` Annotation\r\n * By adding a `$inject` property onto a function the injection parameters can be specified.\r\n *\r\n * ## Inline\r\n * As an array of injection names, where the last item in the array is the function to call.\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$injector#get\r\n * @methodOf AUTO.$injector\r\n *\r\n * @description\r\n * Return an instance of the service.\r\n *\r\n * @param {string} name The name of the instance to retrieve.\r\n * @return {*} The instance.\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$injector#invoke\r\n * @methodOf AUTO.$injector\r\n *\r\n * @description\r\n * Invoke the method and supply the method arguments from the `$injector`.\r\n *\r\n * @param {!function} fn The function to invoke. The function arguments come form the function annotation.\r\n * @param {Object=} self The `this` for the invoked method.\r\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\r\n *   the `$injector` is consulted.\r\n * @returns {*} the value returned by the invoked `fn` function.\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$injector#instantiate\r\n * @methodOf AUTO.$injector\r\n * @description\r\n * Create a new instance of JS type. The method takes a constructor function invokes the new operator and supplies\r\n * all of the arguments to the constructor function as specified by the constructor annotation.\r\n *\r\n * @param {function} Type Annotated constructor function.\r\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\r\n *   the `$injector` is consulted.\r\n * @returns {Object} new instance of `Type`.\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$injector#annotate\r\n * @methodOf AUTO.$injector\r\n *\r\n * @description\r\n * Returns an array of service names which the function is requesting for injection. This API is used by the injector\r\n * to determine which services need to be injected into the function when the function is invoked. There are three\r\n * ways in which the function can be annotated with the needed dependencies.\r\n *\r\n * # Argument names\r\n *\r\n * The simplest form is to extract the dependencies from the arguments of the function. This is done by converting\r\n * the function into a string using `toString()` method and extracting the argument names.\r\n * <pre>\r\n *   // Given\r\n *   function MyController($scope, $route) {\r\n *     // ...\r\n *   }\r\n *\r\n *   // Then\r\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\r\n * </pre>\r\n *\r\n * This method does not work with code minfication / obfuscation. For this reason the following annotation strategies\r\n * are supported.\r\n *\r\n * # The `$inject` property\r\n *\r\n * If a function has an `$inject` property and its value is an array of strings, then the strings represent names of\r\n * services to be injected into the function.\r\n * <pre>\r\n *   // Given\r\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\r\n *     // ...\r\n *   }\r\n *   // Define function dependencies\r\n *   MyController.$inject = ['$scope', '$route'];\r\n *\r\n *   // Then\r\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\r\n * </pre>\r\n *\r\n * # The array notation\r\n *\r\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property is very\r\n * inconvenient. In these situations using the array notation to specify the dependencies in a way that survives\r\n * minification is a better choice:\r\n *\r\n * <pre>\r\n *   // We wish to write this (not minification / obfuscation safe)\r\n *   injector.invoke(function($compile, $rootScope) {\r\n *     // ...\r\n *   });\r\n *\r\n *   // We are forced to write break inlining\r\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\r\n *     // ...\r\n *   };\r\n *   tmpFn.$inject = ['$compile', '$rootScope'];\r\n *   injector.invoke(tempFn);\r\n *\r\n *   // To better support inline function the inline annotation is supported\r\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\r\n *     // ...\r\n *   }]);\r\n *\r\n *   // Therefore\r\n *   expect(injector.annotate(\r\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\r\n *    ).toEqual(['$compile', '$rootScope']);\r\n * </pre>\r\n *\r\n * @param {function|Array.<string|Function>} fn Function for which dependent service names need to be retrieved as described\r\n *   above.\r\n *\r\n * @returns {Array.<string>} The names of the services which the function requires.\r\n */\r\n\r\n\r\n/**\r\n * @ngdoc object\r\n * @name AUTO.$provide\r\n *\r\n * @description\r\n *\r\n * Use `$provide` to register new providers with the `$injector`. The providers are the factories for the instance.\r\n * The providers share the same name as the instance they create with `Provider` suffixed to them.\r\n *\r\n * A provider is an object with a `$get()` method. The injector calls the `$get` method to create a new instance of\r\n * a service. The Provider can have additional methods which would allow for configuration of the provider.\r\n *\r\n * <pre>\r\n *   function GreetProvider() {\r\n *     var salutation = 'Hello';\r\n *\r\n *     this.salutation = function(text) {\r\n *       salutation = text;\r\n *     };\r\n *\r\n *     this.$get = function() {\r\n *       return function (name) {\r\n *         return salutation + ' ' + name + '!';\r\n *       };\r\n *     };\r\n *   }\r\n *\r\n *   describe('Greeter', function(){\r\n *\r\n *     beforeEach(module(function($provide) {\r\n *       $provide.provider('greet', GreetProvider);\r\n *     });\r\n *\r\n *     it('should greet', inject(function(greet) {\r\n *       expect(greet('angular')).toEqual('Hello angular!');\r\n *     }));\r\n *\r\n *     it('should allow configuration of salutation', function() {\r\n *       module(function(greetProvider) {\r\n *         greetProvider.salutation('Ahoj');\r\n *       });\r\n *       inject(function(greet) {\r\n *         expect(greet('angular')).toEqual('Ahoj angular!');\r\n *       });\r\n *     )};\r\n *\r\n *   });\r\n * </pre>\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$provide#provider\r\n * @methodOf AUTO.$provide\r\n * @description\r\n *\r\n * Register a provider for a service. The providers can be retrieved and can have additional configuration methods.\r\n *\r\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name + 'Provider'` key.\r\n * @param {(Object|function())} provider If the provider is:\r\n *\r\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\r\n *               {@link AUTO.$injector#invoke $injector.invoke()} when an instance needs to be created.\r\n *   - `Constructor`: a new instance of the provider will be created using\r\n *               {@link AUTO.$injector#instantiate $injector.instantiate()}, then treated as `object`.\r\n *\r\n * @returns {Object} registered provider instance\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$provide#factory\r\n * @methodOf AUTO.$provide\r\n * @description\r\n *\r\n * A short hand for configuring services if only `$get` method is required.\r\n *\r\n * @param {string} name The name of the instance.\r\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand for\r\n * `$provide.provider(name, {$get: $getFn})`.\r\n * @returns {Object} registered provider instance\r\n */\r\n\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$provide#service\r\n * @methodOf AUTO.$provide\r\n * @description\r\n *\r\n * A short hand for registering service of given class.\r\n *\r\n * @param {string} name The name of the instance.\r\n * @param {Function} constructor A class (constructor function) that will be instantiated.\r\n * @returns {Object} registered provider instance\r\n */\r\n\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$provide#value\r\n * @methodOf AUTO.$provide\r\n * @description\r\n *\r\n * A short hand for configuring services if the `$get` method is a constant.\r\n *\r\n * @param {string} name The name of the instance.\r\n * @param {*} value The value.\r\n * @returns {Object} registered provider instance\r\n */\r\n\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$provide#constant\r\n * @methodOf AUTO.$provide\r\n * @description\r\n *\r\n * A constant value, but unlike {@link AUTO.$provide#value value} it can be injected\r\n * into configuration function (other modules) and it is not interceptable by\r\n * {@link AUTO.$provide#decorator decorator}.\r\n *\r\n * @param {string} name The name of the constant.\r\n * @param {*} value The constant value.\r\n * @returns {Object} registered instance\r\n */\r\n\r\n/**\r\n * @ngdoc method\r\n * @name AUTO.$provide#decorator\r\n * @methodOf AUTO.$provide\r\n * @description\r\n *\r\n * Decoration of service, allows the decorator to intercept the service instance creation. The\r\n * returned instance may be the original instance, or a new instance which delegates to the\r\n * original instance.\r\n *\r\n * @param {string} name The name of the service to decorate.\r\n * @param {function()} decorator This function will be invoked when the service needs to be\r\n *    instanciated. The function is called using the {@link AUTO.$injector#invoke\r\n *    injector.invoke} method and is therefore fully injectable. Local injection arguments:\r\n *\r\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\r\n *      decorated or delegated to.\r\n */\r\n\r\n\r\nfunction createInjector(modulesToLoad, strictDi) {\r\n  // // @wiwo default strictDi to true\r\n  // strictDi = (strictDi !== false);\r\n  strictDi = (strictDi === true);\r\n  var INSTANTIATING = {},\r\n      providerSuffix = 'Provider',\r\n      path = [],\r\n      loadedModules = new NgMap(),\r\n      providerCache = {\r\n        $provide: {\r\n            provider: supportObject(provider),\r\n            factory: supportObject(factory),\r\n            service: supportObject(service),\r\n            value: supportObject(value),\r\n            constant: supportObject(constant),\r\n            decorator: decorator\r\n          }\r\n      },\r\n      providerInjector = (providerCache.$injector =\r\n          createInternalInjector(providerCache, function(serviceName, caller) {\r\n            if (utils.isString(caller)) {\r\n              path.push(caller);\r\n            }\r\n            throw $injectorMinErr('unpr', 'Unknown provider: {0}', path.join(' <- '));\r\n          })),\r\n      instanceCache = {},\r\n      protoInstanceInjector =\r\n          createInternalInjector(instanceCache, function(serviceName, caller) {\r\n            var provider = providerInjector.get(serviceName + providerSuffix, caller);\r\n            return instanceInjector.invoke(\r\n                provider.$get, provider, undefined, serviceName);\r\n          }),\r\n      instanceInjector = protoInstanceInjector;\r\n\r\n  providerCache['$injector' + providerSuffix] = { $get: valueFn(protoInstanceInjector) };\r\n  instanceInjector.modules = providerInjector.modules = createMap();\r\n  var runBlocks = loadModules(modulesToLoad);\r\n  instanceInjector = protoInstanceInjector.get('$injector');\r\n  instanceInjector.strictDi = strictDi;\r\n  forEach(runBlocks, function(fn) { if (fn) instanceInjector.invoke(fn); });\r\n\r\n  instanceInjector.loadNewModules = function(mods) {\r\n    forEach(loadModules(mods), function(fn) { if (fn) instanceInjector.invoke(fn); });\r\n  };\r\n\r\n\r\n  return instanceInjector;\r\n\r\n  ////////////////////////////////////\r\n  // $provider\r\n  ////////////////////////////////////\r\n\r\n  function supportObject(delegate) {\r\n    return function supportObjectInternal(key, value) {\r\n      if (isObject(key)) {\r\n        forEach(key, reverseParams(delegate));\r\n      } else {\r\n        return delegate(key, value);\r\n      }\r\n    };\r\n  }\r\n\r\n  function provider(name, provider_) {\r\n    assertNotHasOwnProperty(name, 'service');\r\n    if (isFunction(provider_) || Array.isArray(provider_)) {\r\n      provider_ = providerInjector.instantiate(provider_);\r\n    }\r\n    if (!provider_.$get) {\r\n      throw $injectorMinErr('pget', 'Provider \\'{0}\\' must define $get factory method.', name);\r\n    }\r\n    return (providerCache[name + providerSuffix] = provider_);\r\n  }\r\n\r\n  function enforceReturnValue(name, factory) {\r\n    return /** @this */ function enforcedReturnValue() {\r\n      var result = instanceInjector.invoke(factory, this);\r\n      if (isUndefined(result)) {\r\n        throw $injectorMinErr('undef', 'Provider \\'{0}\\' must return a value from $get factory method.', name);\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  function factory(name, factoryFn, enforce) {\r\n    return provider(name, {\r\n      $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn\r\n    });\r\n  }\r\n\r\n  function service(name, constructor) {\r\n    return factory(name, ['$injector', function($injector) {\r\n      return $injector.instantiate(constructor);\r\n    }]);\r\n  }\r\n\r\n  function value(name, val) { return factory(name, valueFn(val), false); }\r\n\r\n  function constant(name, value) {\r\n    assertNotHasOwnProperty(name, 'constant');\r\n    providerCache[name] = value;\r\n    instanceCache[name] = value;\r\n  }\r\n\r\n  function decorator(serviceName, decorFn) {\r\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\r\n        orig$get = origProvider.$get;\r\n\r\n    origProvider.$get = function() {\r\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\r\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\r\n    };\r\n  }\r\n\r\n  ////////////////////////////////////\r\n  // Module Loading\r\n  ////////////////////////////////////\r\n  function loadModules(modulesToLoad) {\r\n    assertArg(isUndefined(modulesToLoad) || Array.isArray(modulesToLoad), 'modulesToLoad', 'not an array');\r\n    var runBlocks = [], moduleFn;\r\n    forEach(modulesToLoad, function(module) {\r\n      if (loadedModules.get(module)) return;\r\n      loadedModules.set(module, true);\r\n\r\n      function runInvokeQueue(queue) {\r\n        var i, ii;\r\n        for (i = 0, ii = queue.length; i < ii; i++) {\r\n          var invokeArgs = queue[i],\r\n              provider = providerInjector.get(invokeArgs[0]);\r\n\r\n          provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\r\n        }\r\n      }\r\n\r\n      try {\r\n        if (isString(module)) {\r\n          moduleFn = di.module(module);\r\n          instanceInjector.modules[module] = moduleFn;\r\n          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\r\n          runInvokeQueue(moduleFn._invokeQueue);\r\n          runInvokeQueue(moduleFn._configBlocks);\r\n        } else if (isFunction(module)) {\r\n            runBlocks.push(providerInjector.invoke(module));\r\n        } else if (Array.isArray(module)) {\r\n            runBlocks.push(providerInjector.invoke(module));\r\n        } else {\r\n          assertArgFn(module, 'module');\r\n        }\r\n      } catch (e) {\r\n        if (Array.isArray(module)) {\r\n          module = module[module.length - 1];\r\n        }\r\n        if (e.message && e.stack && e.stack.indexOf(e.message) === -1) {\r\n          // Safari & FF's stack traces don't contain error.message content\r\n          // unlike those of Chrome and IE\r\n          // So if stack doesn't contain message, we create a new string that contains both.\r\n          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.\r\n          // eslint-disable-next-line no-ex-assign\r\n          e = e.message + '\\n' + e.stack;\r\n        }\r\n        throw $injectorMinErr('modulerr', 'Failed to instantiate module {0} due to:\\n{1}',\r\n                module, e.stack || e.message || e);\r\n      }\r\n    });\r\n    return runBlocks;\r\n  }\r\n\r\n  ////////////////////////////////////\r\n  // internal Injector\r\n  ////////////////////////////////////\r\n\r\n  function createInternalInjector(cache, factory) {\r\n\r\n    function getService(serviceName, caller) {\r\n      if (cache.hasOwnProperty(serviceName)) {\r\n        if (cache[serviceName] === INSTANTIATING) {\r\n          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',\r\n                  serviceName + ' <- ' + path.join(' <- '));\r\n        }\r\n        return cache[serviceName];\r\n      } else {\r\n        try {\r\n          path.unshift(serviceName);\r\n          cache[serviceName] = INSTANTIATING;\r\n          cache[serviceName] = factory(serviceName, caller);\r\n          return cache[serviceName];\r\n        } catch (err) {\r\n          if (cache[serviceName] === INSTANTIATING) {\r\n            delete cache[serviceName];\r\n          }\r\n          throw err;\r\n        } finally {\r\n          path.shift();\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    function injectionArgs(fn, locals, serviceName) {\r\n      var args = [],\r\n          $inject = createInjector.$$annotate(fn, strictDi, serviceName);\r\n\r\n      for (var i = 0, length = $inject.length; i < length; i++) {\r\n        var key = $inject[i];\r\n        if (typeof key !== 'string') {\r\n          throw $injectorMinErr('itkn',\r\n                'Incorrect injection token! Expected service name as string, got {0}', key);\r\n        }\r\n        args.push(locals && locals.hasOwnProperty(key) ? locals[key] :\r\n                                                         getService(key, serviceName));\r\n      }\r\n      return args;\r\n    }\r\n\r\n    function isClass(func) {\r\n      // Support: IE 9-11 only\r\n      // IE 9-11 do not support classes and IE9 leaks with the code below.\r\n      if (msie || typeof func !== 'function') {\r\n        return false;\r\n      }\r\n      var result = func.$$ngIsClass;\r\n      if (!isBoolean(result)) {\r\n        // Support: Edge 12-13 only\r\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/6156135/\r\n        result = func.$$ngIsClass = /^(?:class\\b|constructor\\()/.test(stringifyFn(func));\r\n      }\r\n      return result;\r\n    }\r\n\r\n    function invoke(fn, self, locals, serviceName) {\r\n      if (typeof locals === 'string') {\r\n        serviceName = locals;\r\n        locals = null;\r\n      }\r\n\r\n      var args = injectionArgs(fn, locals, serviceName);\r\n      if (Array.isArray(fn)) {\r\n        fn = fn[fn.length - 1];\r\n      }\r\n\r\n      if (!isClass(fn)) {\r\n        // http://jsperf.com/angularjs-invoke-apply-vs-switch\r\n        // #5388\r\n        return fn.apply(self, args);\r\n      } else {\r\n        args.unshift(null);\r\n        return new (Function.prototype.bind.apply(fn, args))();\r\n      }\r\n    }\r\n\r\n\r\n    function instantiate(Type, locals, serviceName) {\r\n      // Check if Type is annotated and use just the given function at n-1 as parameter\r\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\r\n      var ctor = (Array.isArray(Type) ? Type[Type.length - 1] : Type);\r\n      var args = injectionArgs(Type, locals, serviceName);\r\n      // Empty object at position 0 is ignored for invocation with `new`, but required.\r\n      args.unshift(null);\r\n      return new (Function.prototype.bind.apply(ctor, args))();\r\n    }\r\n\r\n\r\n    return {\r\n      invoke: invoke,\r\n      instantiate: instantiate,\r\n      get: getService,\r\n      annotate: createInjector.$$annotate,\r\n      has: function(name) {\r\n        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\r\n      }\r\n      // @wiwo extension:\r\n      // keys: function(){ return Object.keys(providerCache) }\r\n    };\r\n  }\r\n\r\n\r\n};\r\n\r\n\r\ncreateInjector.$$annotate = annotate;\r\n\r\nconst injectorMod = {\r\n  createInjector,\r\n  annotate,\r\n};\r\n\r\nexport default injectorMod;\r\nexport {\r\n  createInjector,\r\n  annotate,\r\n}\r\n\r\n","/*\r\n * ng-di\r\n * https://github.com/jmenidara/ng-di\r\n *\r\n * Copyright (c) 2013 Javier Mendiara Cañardo\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport * as _di from \"./module\";\r\nimport * as _injector from \"./injector\";\r\nimport * as _utils from \"./utils\";\r\n\r\nexport const module = _di.setupModuleLoader(exports);\r\nexport const injector = _injector.createInjector;\r\nexport const annotate = _injector.annotate;\r\nexport const utils = _utils;\r\n\r\nexport const di = {\r\n    module,\r\n    injector,\r\n    annotate,\r\n    utils,\r\n};\r\nexport default di; \r\n"],"names":["NgMap","utils.isString","module","di.module","_di.setupModuleLoader","_injector.createInjector","annotate","_injector.annotate"],"mappings":"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EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,IAAI,EAAE,SAAS,KAAK,EAAE;EAChC,YAAY,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;EAClC,cAAc,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,QAAQ,CAAC,MAAM,EAAE,oCAAoC,EAAE,OAAO,CAAC,CAAC;EAC1G,cAAc,IAAI,GAAG,KAAK,CAAC;EAC3B,cAAc,OAAO,IAAI,CAAC;EAC1B,aAAa;EACb,YAAY,OAAO,IAAI,CAAC;EACxB,WAAW;AACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,QAAQ,EAAE,QAAQ;AAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,IAAI,EAAE,IAAI;AACpB;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,QAAQ,EAAE,2BAA2B,CAAC,UAAU,EAAE,UAAU,CAAC;AACvE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,OAAO,EAAE,2BAA2B,CAAC,UAAU,EAAE,SAAS,CAAC;AACrE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,OAAO,EAAE,2BAA2B,CAAC,UAAU,EAAE,SAAS,CAAC;AACrE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,KAAK,EAAE,WAAW,CAAC,UAAU,EAAE,OAAO,CAAC;AACjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,QAAQ,EAAE,WAAW,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC;AAClE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,SAAS,EAAE,2BAA2B,CAAC,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC;AACvF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,MAAM,EAAE,M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"}